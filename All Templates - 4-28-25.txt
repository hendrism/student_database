_report_buttons
<!-- Button links for navigating to different report views in the Student Database app. -->

<h2>Reports</h2>

<a href="{{ url_for('routes.monthly_sessions_report') }}" class="btn btn-outline-primary btn-block mb-2">Monthly Session Tracking Report</a>
<a href="{{ url_for('routes.makeup_needed_report') }}" class="btn btn-outline-primary btn-block mb-2">Missed/Makeup Needed Sessions Report</a>
<a href="{{ url_for('routes.trial_logs_by_date') }}" class="btn btn-outline-secondary btn-block mb-2">Trial Logs by Date</a>
<a href="{{ url_for('routes.scheduled_sessions_pending') }}" class="btn btn-outline-secondary btn-block mb-2">View Unupdated Scheduled Sessions</a>
<!-- Future report links can be added here -->

_student_table
<!-- Table rows for displaying all students in the Student Database app. -->
<tbody>
  {% for student in students %}
    <tr>
      <td>{{ student.student_id }}</td>
      <td>{{ student.first_name }}</td>
      <td>{{ student.last_name }}</td>
      <td>{{ student.grade }}</td>
      <td>{{ student.preferred_name }}</td>
      <td>
        <a href="{{ url_for('routes.student_info', student_id=student.student_id) }}" class="btn btn-outline-info btn-sm">View</a>
        <a href="{{ url_for('routes.edit_student', student_id=student.student_id) }}" class="btn btn-primary btn-sm">Edit</a>
        <a href="{{ url_for('routes.delete_student', student_id=student.student_id) }}"
           class="btn btn-danger btn-sm"
           onclick="return confirm('Are you sure you want to delete this student? This cannot be undone.');">
           Delete
        </a>
      </td>
    </tr>
  {% endfor %}
</tbody>

add_goal
<!-- Form page for adding a new goal (and optional first objective) for a student in the Student Database app. -->
{% extends "base.html" %}
{% import "macros.html" as macros %}

{% block content %}
  <h2>Add Goal for {{ student.first_name }} {{ student.last_name }}</h2>
  
  <form method="POST">
    {{ macros.render_textarea("goal_description", "Goal Description", required=True, rows=3) }}
    
    {{ macros.render_input("first_objective", "First Objective (Optional)", placeholder="Add an objective if you want") }}
    
    <button type="submit" class="btn btn-primary">Add Goal</button>
    <a href="{{ url_for('routes.student_info', student_id=student.student_id) }}" class="btn btn-secondary">Cancel</a>
  </form>
{% endblock %}


add_objective
<!-- Form page for adding a new objective to a specific goal in the Student Database app. -->
{% extends "base.html" %}
{% import "macros.html" as macros %}

{% block content %}
  <h2>Add Objective for Goal</h2>
  
  <form method="POST">
    {{ macros.render_textarea("objective_description", "Objective Description", required=True, rows=3) }}
    
    {{ macros.render_input("with_accuracy", "Expected Accuracy (Optional)", placeholder="e.g., 80% accuracy over 3 sessions") }}
    
    <button type="submit" class="btn btn-primary">Add Objective</button>
    <a href="{{ url_for('routes.student_info', student_id=goal.student.student_id) }}" class="btn btn-secondary">Cancel</a>
  </form>
{% endblock %}


add_student
<!-- Form page for adding a new student to the Student Database app. -->
{% extends "base.html" %}
{% block content %}
<h2>Add Student</h2>
<form method="POST">
  {% include "_student_form_fields.html" %}
  <button type="submit" class="btn btn-primary">Add Student</button>
</form>
{% endblock %} 


base
<file name=_student_table.html path=/Users/Sean-Work/Databases/student_database/templates>
<table class="table table-striped">
  <thead>
    <tr>
      <th>Student ID</th>
      <th>Name</th>
      <th>Date of Birth</th>
      <th>Actions</th>
    </tr>
  </thead>
  <tbody>
    {% for student in students %}
    <tr>
      <td>{{ student.student_id }}</td>
      <td>{{ student.first_name }} {{ student.last_name }}</td>
      <td>{{ student.date_of_birth.strftime('%Y-%m-%d') }}</td>
      <td>
        <a href="{{ url_for('routes.student_trial_logs', student_id=student.student_id) }}" class="btn btn-outline-info btn-sm">View</a>
        <a href="{{ url_for('routes.edit_student', student_id=student.student_id) }}" class="btn btn-outline-primary btn-sm">Edit</a>
      </td>
    </tr>
    {% endfor %}
  </tbody>
</table>
</file>

calendar
{% extends "base.html" %}
{% block title %}Calendar{% endblock %}

{% block content %}
<div id="calendar" style="max-width: 900px; margin: 0 auto;"></div>

<!-- Create Event Modal -->
<div class="modal fade" id="eventModal" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog">
    <form id="eventForm">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">Add Event</h5>
          <button type="button" class="close" data-dismiss="modal">&times;</button>
        </div>
        <div class="modal-body">
          <!-- Title -->
          <div class="form-group">
            <label for="eventTitle">Title</label>
            <input type="text" id="eventTitle" name="title" class="form-control">
          </div>
          <!-- Type -->
          <div class="form-group">
            <label for="eventType">Type</label>
            <select id="eventType" name="event_type" class="form-control">
              <option value="Session">Session</option>
              <option value="Meeting">Meeting</option>
              <option value="Reminder">Reminder</option>
            </select>
          </div>
          <!-- Date -->
          <div class="form-group">
            <label for="eventDate">Date</label>
            <input type="date" id="eventDate" name="date_of_session" class="form-control" required>
          </div>
          <!-- Start Time -->
          <div class="form-group">
            <label for="eventStartTime">Start Time</label>
            <input type="time" id="eventStartTime" name="time_of_start" class="form-control" required>
          </div>
          <!-- End Time -->
          <div class="form-group">
            <label for="eventEndTime">End Time</label>
            <input type="time" id="eventEndTime" name="time_of_end" class="form-control" required>
          </div>
          <!-- Status -->
          <div class="form-group">
            <label for="eventStatus">Status</label>
            <select id="eventStatus" name="status" class="form-control">
              <option value="Scheduled" selected>Scheduled</option>
              <option value="Completed">Completed</option>
              <option value="Makeup Needed">Makeup Needed</option>
              <option value="Excused Absence">Excused Absence</option>
            </select>
          </div>
          <!-- Notes -->
          <div class="form-group">
            <label for="eventPlanNotes">Plan Notes</label>
            <textarea id="eventPlanNotes" name="plan_notes" class="form-control"></textarea>
          </div>
          <!-- Student -->
          <div class="form-group">
            <label for="eventStudent">Student</label>
            <select id="eventStudent" name="student_id" class="form-control" required>
              <option value="">Select a student</option>
              {% for student in students %}
                <option value="{{ student.student_id }}">
                  {{ student.first_name }} {{ student.last_name }}
                </option>
              {% endfor %}
            </select>
          </div>
        </div>
        <div class="modal-footer">
          <button type="submit" class="btn btn-primary">Save Event</button>
          <button type="button" class="btn btn-secondary" data-dismiss="modal">
            Cancel
          </button>
        </div>
      </div>
    </form>
  </div>
</div>

<!-- Edit Event Modal -->
<div class="modal fade" id="editEventModal" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog">
    <form id="editEventForm">
      <input type="hidden" id="editEventId" name="event_id">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">Edit Event</h5>
          <button type="button" class="close" data-dismiss="modal">&times;</button>
        </div>
        <div class="modal-body">
          <div class="form-group">
            <label for="editEventTitle">Title</label>
            <input type="text" id="editEventTitle" name="title" class="form-control" required>
          </div>
          <!-- Date -->
          <div class="form-group">
            <label for="editEventDate">Date</label>
            <input type="date" id="editEventDate" name="date_of_session" class="form-control" required>
          </div>
          <!-- Start Time -->
          <div class="form-group">
            <label for="editEventStartTime">Start Time</label>
            <input type="time" id="editEventStartTime" name="time_of_start" class="form-control" required>
          </div>
          <!-- End Time -->
          <div class="form-group">
            <label for="editEventEndTime">End Time</label>
            <input type="time" id="editEventEndTime" name="time_of_end" class="form-control" required>
          </div>
          <div class="form-group">
            <label for="editEventStatus">Status</label>
            <select id="editEventStatus" name="status" class="form-control">
              <option value="Scheduled">Scheduled</option>
              <option value="Completed">Completed</option>
              <option value="Makeup Needed">Makeup Needed</option>
              <option value="Excused Absence">Excused Absence</option>
            </select>
          </div>
          <div class="form-group">
            <label for="editEventPlanNotes">Plan Notes</label>
            <textarea id="editEventPlanNotes" name="plan_notes" class="form-control"></textarea>
          </div>
        </div>
        <div class="modal-footer">
          <button type="submit" class="btn btn-primary">Save Changes</button>
          <button type="button" class="btn btn-secondary" data-dismiss="modal">
            Cancel
          </button>
        </div>
      </div>
    </form>
  </div>
</div>
{% endblock %}

{% block scripts %}
  {{ super() }}

  <!-- FullCalendar -->
  <link href="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.0/main.min.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.0/main.min.js"></script>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      var calendarEl = document.getElementById('calendar');
      var calendar = new FullCalendar.Calendar(calendarEl, {
        initialView: 'timeGridWeek',
        // if filter_date was passed in, start the calendar on that date:
        {% if filter_date %}
        initialDate: '{{ filter_date }}',
        {% endif %}
        headerToolbar: {
          left:  'prev,next today',
          center:'title',
          right: 'dayGridMonth,timeGridWeek,timeGridDay'
        },
        selectable: true,
        events: {
          url: "{{ url_for('routes.api_events') }}",
          method: 'GET',
          failure: function() {
            alert('Error fetching events from server.');
          }
        },
        dateClick: function(info) {
          // set date and times
          document.getElementById('eventDate').value = info.dateStr;
          document.getElementById('eventStartTime').value = info.dateStrTime || info.dateStr.split('T')[1].slice(0,5);
          document.getElementById('eventEndTime').value = new Date(info.date.getTime() + 30*60000).toTimeString().slice(0,5);
          $('#eventModal').modal('show');
        },
        eventClick: function(info) {
          document.getElementById('editEventId').value = info.event.id;
          document.getElementById('editEventTitle').value = info.event.title;
          const start = info.event.start;
          const end = info.event.end || start;
          document.getElementById('editEventDate').value = start.toISOString().split('T')[0];
          document.getElementById('editEventStartTime').value = start.toTimeString().slice(0,5);
          document.getElementById('editEventEndTime').value = end.toTimeString().slice(0,5);
          document.getElementById('editEventStatus').value = info.event.extendedProps.status || '';
          document.getElementById('editEventPlanNotes').value = info.event.extendedProps.plan_notes || '';
          $('#editEventModal').modal('show');
        }
      });

      calendar.render();

      // CREATE
      var createForm = document.getElementById('eventForm');
      if (createForm) {
        createForm.addEventListener('submit', function(e) {
          e.preventDefault();
          fetch("{{ url_for('routes.api_events') }}", {
            method: 'POST',
            body: new FormData(this)
          })
          .then(r => {
            if (r.ok) {
              $('#eventModal').modal('hide');
              calendar.refetchEvents();
            } else {
              alert('Error creating event');
            }
          })
          .catch(console.error);
        });
      }

      // UPDATE
      var editForm = document.getElementById('editEventForm');
      if (editForm) {
        editForm.addEventListener('submit', function(e) {
          e.preventDefault();
          var id = this.event_id.value;
          fetch("/api/events/" + id, {
            method: 'POST',
            body: new FormData(this)
          })
          .then(r => {
            if (r.ok) {
              $('#editEventModal').modal('hide');
              calendar.refetchEvents();
            } else {
              alert('Error updating event');
            }
          })
          .catch(console.error);
        });
      }
    });
  </script>
{% endblock %}

edit_student
{% extends "base.html" %}
{% block title %}Calendar{% endblock %}

{% block content %}
<div id="calendar" style="max-width: 900px; margin: 0 auto;"></div>

<!-- Create Event Modal -->
<div class="modal fade" id="eventModal" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog">
    <form id="eventForm">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">Add Event</h5>
          <button type="button" class="close" data-dismiss="modal">&times;</button>
        </div>
        <div class="modal-body">
          <!-- Title -->
          <div class="form-group">
            <label for="eventTitle">Title</label>
            <input type="text" id="eventTitle" name="title" class="form-control">
          </div>
          <!-- Type -->
          <div class="form-group">
            <label for="eventType">Type</label>
            <select id="eventType" name="event_type" class="form-control">
              <option value="Session">Session</option>
              <option value="Meeting">Meeting</option>
              <option value="Reminder">Reminder</option>
            </select>
          </div>
          <!-- Date -->
          <div class="form-group">
            <label for="eventDate">Date</label>
            <input type="date" id="eventDate" name="date_of_session" class="form-control" required>
          </div>
          <!-- Start Time -->
          <div class="form-group">
            <label for="eventStartTime">Start Time</label>
            <input type="time" id="eventStartTime" name="time_of_start" class="form-control" required>
          </div>
          <!-- End Time -->
          <div class="form-group">
            <label for="eventEndTime">End Time</label>
            <input type="time" id="eventEndTime" name="time_of_end" class="form-control" required>
          </div>
          <!-- Status -->
          <div class="form-group">
            <label for="eventStatus">Status</label>
            <select id="eventStatus" name="status" class="form-control">
              <option value="Scheduled" selected>Scheduled</option>
              <option value="Completed">Completed</option>
              <option value="Makeup Needed">Makeup Needed</option>
              <option value="Excused Absence">Excused Absence</option>
            </select>
          </div>
          <!-- Notes -->
          <div class="form-group">
            <label for="eventPlanNotes">Plan Notes</label>
            <textarea id="eventPlanNotes" name="plan_notes" class="form-control"></textarea>
          </div>
          <!-- Student -->
          <div class="form-group">
            <label for="eventStudent">Student</label>
            <select id="eventStudent" name="student_id" class="form-control" required>
              <option value="">Select a student</option>
              {% for student in students %}
                <option value="{{ student.student_id }}">
                  {{ student.first_name }} {{ student.last_name }}
                </option>
              {% endfor %}
            </select>
          </div>
        </div>
        <div class="modal-footer">
          <button type="submit" class="btn btn-primary">Save Event</button>
          <button type="button" class="btn btn-secondary" data-dismiss="modal">
            Cancel
          </button>
        </div>
      </div>
    </form>
  </div>
</div>

<!-- Edit Event Modal -->
<div class="modal fade" id="editEventModal" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog">
    <form id="editEventForm">
      <input type="hidden" id="editEventId" name="event_id">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">Edit Event</h5>
          <button type="button" class="close" data-dismiss="modal">&times;</button>
        </div>
        <div class="modal-body">
          <div class="form-group">
            <label for="editEventTitle">Title</label>
            <input type="text" id="editEventTitle" name="title" class="form-control" required>
          </div>
          <!-- Date -->
          <div class="form-group">
            <label for="editEventDate">Date</label>
            <input type="date" id="editEventDate" name="date_of_session" class="form-control" required>
          </div>
          <!-- Start Time -->
          <div class="form-group">
            <label for="editEventStartTime">Start Time</label>
            <input type="time" id="editEventStartTime" name="time_of_start" class="form-control" required>
          </div>
          <!-- End Time -->
          <div class="form-group">
            <label for="editEventEndTime">End Time</label>
            <input type="time" id="editEventEndTime" name="time_of_end" class="form-control" required>
          </div>
          <div class="form-group">
            <label for="editEventStatus">Status</label>
            <select id="editEventStatus" name="status" class="form-control">
              <option value="Scheduled">Scheduled</option>
              <option value="Completed">Completed</option>
              <option value="Makeup Needed">Makeup Needed</option>
              <option value="Excused Absence">Excused Absence</option>
            </select>
          </div>
          <div class="form-group">
            <label for="editEventPlanNotes">Plan Notes</label>
            <textarea id="editEventPlanNotes" name="plan_notes" class="form-control"></textarea>
          </div>
        </div>
        <div class="modal-footer">
          <button type="submit" class="btn btn-primary">Save Changes</button>
          <button type="button" class="btn btn-secondary" data-dismiss="modal">
            Cancel
          </button>
        </div>
      </div>
    </form>
  </div>
</div>
{% endblock %}

{% block scripts %}
  {{ super() }}

  <!-- FullCalendar -->
  <link href="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.0/main.min.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.0/main.min.js"></script>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      var calendarEl = document.getElementById('calendar');
      var calendar = new FullCalendar.Calendar(calendarEl, {
        initialView: 'timeGridWeek',
        // if filter_date was passed in, start the calendar on that date:
        {% if filter_date %}
        initialDate: '{{ filter_date }}',
        {% endif %}
        headerToolbar: {
          left:  'prev,next today',
          center:'title',
          right: 'dayGridMonth,timeGridWeek,timeGridDay'
        },
        selectable: true,
        events: {
          url: "{{ url_for('routes.api_events') }}",
          method: 'GET',
          failure: function() {
            alert('Error fetching events from server.');
          }
        },
        dateClick: function(info) {
          // set date and times
          document.getElementById('eventDate').value = info.dateStr;
          document.getElementById('eventStartTime').value = info.dateStrTime || info.dateStr.split('T')[1].slice(0,5);
          document.getElementById('eventEndTime').value = new Date(info.date.getTime() + 30*60000).toTimeString().slice(0,5);
          $('#eventModal').modal('show');
        },
        eventClick: function(info) {
          document.getElementById('editEventId').value = info.event.id;
          document.getElementById('editEventTitle').value = info.event.title;
          const start = info.event.start;
          const end = info.event.end || start;
          document.getElementById('editEventDate').value = start.toISOString().split('T')[0];
          document.getElementById('editEventStartTime').value = start.toTimeString().slice(0,5);
          document.getElementById('editEventEndTime').value = end.toTimeString().slice(0,5);
          document.getElementById('editEventStatus').value = info.event.extendedProps.status || '';
          document.getElementById('editEventPlanNotes').value = info.event.extendedProps.plan_notes || '';
          $('#editEventModal').modal('show');
        }
      });

      calendar.render();

      // CREATE
      var createForm = document.getElementById('eventForm');
      if (createForm) {
        createForm.addEventListener('submit', function(e) {
          e.preventDefault();
          fetch("{{ url_for('routes.api_events') }}", {
            method: 'POST',
            body: new FormData(this)
          })
          .then(r => {
            if (r.ok) {
              $('#eventModal').modal('hide');
              calendar.refetchEvents();
            } else {
              alert('Error creating event');
            }
          })
          .catch(console.error);
        });
      }

      // UPDATE
      var editForm = document.getElementById('editEventForm');
      if (editForm) {
        editForm.addEventListener('submit', function(e) {
          e.preventDefault();
          var id = this.event_id.value;
          fetch("/api/events/" + id, {
            method: 'POST',
            body: new FormData(this)
          })
          .then(r => {
            if (r.ok) {
              $('#editEventModal').modal('hide');
              calendar.refetchEvents();
            } else {
              alert('Error updating event');
            }
          })
          .catch(console.error);
        });
      }
    });
  </script>
{% endblock %}

index
{% extends "base.html" %}
<!-- Main index page listing students with grade filter and add student option. -->
{% block content %}
  <h2>Students</h2>
  
  <!-- Grade Filter Form -->
  <form method="GET" action="{{ url_for('routes.index') }}">
    <div class="form-group">
      <label for="grade">Filter by Grade:</label>
      <select name="grade" id="grade" class="form-control">
         <option value="">All Grades</option>
         <option value="Grade 9" {% if grade_filter == 'Grade 9' %}selected{% endif %}>Grade 9</option>
         <option value="Grade 10" {% if grade_filter == 'Grade 10' %}selected{% endif %}>Grade 10</option>
         <option value="Grade 11" {% if grade_filter == 'Grade 11' %}selected{% endif %}>Grade 11</option>
         <option value="Grade 12" {% if grade_filter == 'Grade 12' %}selected{% endif %}>Grade 12</option>
      </select>
    </div>
    <button type="submit" class="btn btn-primary">Filter</button>
  </form>
  
  {% include "_student_table.html" %}
  <a href="{{ url_for('routes.add_student') }}" class="btn btn-success">Add New Student</a>
{% endblock %}

macros
{# Macros for rendering input fields (textarea, text, etc.) in Student Database app forms. #}
{% macro render_textarea(field_id, label, required=False, rows=3, placeholder="") %}
<div class="form-group">
  <label for="{{ field_id }}"><strong>{{ label }}</strong></label>
  <textarea class="form-control" id="{{ field_id }}" name="{{ field_id }}" rows="{{ rows }}" placeholder="{{ placeholder }}" {% if required %}required{% endif %}></textarea>
</div>
{% endmacro %}

{% macro render_input(field_id, label, type="text", required=False, placeholder="") %}
<div class="form-group">
  <label for="{{ field_id }}"><strong>{{ label }}</strong></label>
  <input type="{{ type }}" class="form-control" id="{{ field_id }}" name="{{ field_id }}" placeholder="{{ placeholder }}" {% if required %}required{% endif %}>
</div>
{% endmacro %}


makeup_needed_report
{% extends "base.html" %}
{% block content %}
<!-- Report page for displaying missed and makeup-needed sessions using EventStudentStatus records in the Student Database app. -->
<h2>Missed/Makeup Needed Sessions Report</h2>

<h3>This Month's Makeup Needed Sessions ({{ current_month }}/{{ current_year }})</h3>
{% if this_month_makeup_needed %}
  <table class="table table-bordered">
    <thead>
      <tr>
        <th>Date</th>
        <th>Student</th>
        <th>Time</th>
        <th>Status</th>
        <th>Plan Notes</th>
        <th>Actions</th>
      </tr>
    </thead>
    <tbody>
      {% for rec in this_month_makeup_needed %}
        <tr>
          <td>{{ rec.start.strftime('%Y-%m-%d') }}</td>
          <td>
            {% for student in rec.students %}
              {{ student.first_name }} {{ student.last_name }}{% if not loop.last %}, {% endif %}
            {% endfor %}
          </td>
          <td>{{ rec.start.strftime('%H:%M') }}–{{ rec.end.strftime('%H:%M') }}</td>
          <td>{{ rec.status }}</td>
          <td>{{ rec.plan_notes or 'N/A' }}</td>
          <td>
            <form action="{{ url_for('routes.update_event_student_status', event_id=rec.id, student_id=rec.students[0].student_id) }}" method="post" style="display:inline;">
              <select name="status" onchange="this.form.submit()" class="form-control form-control-sm">
                {% for option in ['Scheduled','Completed','Makeup Needed','Excused Absence'] %}
                  <option value="{{ option }}" {% if rec.status == option %}selected{% endif %}>{{ option }}</option>
                {% endfor %}
              </select>
            </form>
            <form action="{{ url_for('routes.archive_session', session_id=rec.id) }}" method="post" style="display:inline;">
              <button type="submit" onclick="return confirmArchive()" class="btn btn-sm btn-warning">Archive</button>
            </form>
          </td>
        </tr>
      {% endfor %}
    </tbody>
  </table>
{% else %}
  <p>No makeup sessions for this month.</p>
{% endif %}

<h3>All-Time Makeup Needed Sessions</h3>
{% if all_makeup_needed %}
  <table class="table table-bordered">
    <thead>
      <tr>
        <th>Date</th>
        <th>Student</th>
        <th>Time</th>
        <th>Status</th>
        <th>Plan Notes</th>
        <th>Actions</th>
      </tr>
    </thead>
    <tbody>
      {% for rec in all_makeup_needed %}
        <tr>
          <td>{{ rec.start.strftime('%Y-%m-%d') }}</td>
          <td>
            {% for student in rec.students %}
              {{ student.first_name }} {{ student.last_name }}{% if not loop.last %}, {% endif %}
            {% endfor %}
          </td>
          <td>{{ rec.start.strftime('%H:%M') }}–{{ rec.end.strftime('%H:%M') }}</td>
          <td>{{ rec.status }}</td>
          <td>{{ rec.plan_notes or 'N/A' }}</td>
          <td>
            <form action="{{ url_for('routes.update_event_student_status', event_id=rec.id, student_id=rec.students[0].student_id) }}" method="post" style="display:inline;">
              <select name="status" onchange="this.form.submit()" class="form-control form-control-sm">
                {% for option in ['Scheduled','Completed','Makeup Needed','Excused Absence'] %}
                  <option value="{{ option }}" {% if rec.status == option %}selected{% endif %}>{{ option }}</option>
                {% endfor %}
              </select>
            </form>
            <form action="{{ url_for('routes.archive_session', session_id=rec.id) }}" method="post" style="display:inline;">
              <button type="submit" onclick="return confirmArchive()" class="btn btn-sm btn-warning">Archive</button>
            </form>
          </td>
        </tr>
      {% endfor %}
    </tbody>
  </table>
{% else %}
  <p>No active makeup sessions on record.</p>
{% endif %}

{% endblock %}


monthly_sessions_report
{% extends "base.html" %}
{% block title %}Monthly Sessions Report{% endblock %}

{% block content %}
  <h2>Monthly Sessions Report for {{ month }}/{{ year }}</h2>

  <form class="form-inline mb-3" method="GET" action="{{ url_for('routes.monthly_sessions_report') }}">
    <div class="form-group mr-2">
      <label for="monthSelect" class="mr-1">Month</label>
      <select id="monthSelect" name="month" class="form-control">
        {% for m in range(1,13) %}
          <option value="{{ m }}" {% if m == month %}selected{% endif %}>{{ m }}</option>
        {% endfor %}
      </select>
    </div>
    <div class="form-group mr-2">
      <label for="yearSelect" class="mr-1">Year</label>
      <select id="yearSelect" name="year" class="form-control">
        {% for y in range(year - 2, year + 1) %}
          <option value="{{ y }}" {% if y == year %}selected{% endif %}>{{ y }}</option>
        {% endfor %}
      </select>
    </div>
    <div class="form-group mr-2">
      <label for="sortSelect" class="mr-1">Sort By</label>
      <select id="sortSelect" name="sort_by" class="form-control">
        <option value="" {% if not sort_by %}selected{% endif %}>Default</option>
        <option value="student_az" {% if sort_by=='student_az' %}selected{% endif %}>Student A→Z</option>
        <option value="student_za" {% if sort_by=='student_za' %}selected{% endif %}>Student Z→A</option>
        <option value="remaining_asc" {% if sort_by=='remaining_asc' %}selected{% endif %}>Least Remaining</option>
        <option value="remaining_desc" {% if sort_by=='remaining_desc' %}selected{% endif %}>Most Remaining</option>
        <option value="makeups_asc" {% if sort_by=='makeups_asc' %}selected{% endif %}>Least Makeups</option>
        <option value="makeups_desc" {% if sort_by=='makeups_desc' %}selected{% endif %}>Most Makeups</option>
      </select>
    </div>
    <button type="submit" class="btn btn-primary">Apply</button>
  </form>

  <table class="table table-striped table-bordered">
    <thead class="thead-light">
      <tr>
        <th>Student</th>
        <th>Expected</th>
        <th>Completed</th>
        <th>Makeup Needed</th>
        <th>Remaining</th>
        <th>Total Makeups</th>
      </tr>
    </thead>
    <tbody>
      {% for row in report_data %}
        <tr>
          <td>{{ row.student_name }}</td>
          <td>{{ row.expected_sessions }}</td>
          <td>{{ row.completed_sessions }}</td>
          <td>{{ row.makeup_needed }}</td>
          <td>{{ row.remaining_sessions }}</td>
          <td>{{ row.total_makeups }}</td>
        </tr>
      {% endfor %}
    </tbody>
  </table>
{% endblock %}

quarterly_report_result
<!-- Displays the generated quarterly report with copyable paragraphs and signature. -->
{% extends "base.html" %}
{% block title %}Quarterly Report Result{% endblock %}
{% block content %}
<h2>Generated Quarterly Report</h2>
{% for paragraph in report_paragraphs %}
  <div class="goal-report mb-3">
    <div id="reportContainer{{ loop.index }}">
      <p style="white-space: pre-wrap;">{{ paragraph }}</p>
      <div class="signature mt-2">
        <p> - Sean Hendricks, MA CCC-SLP MD License #07304</p>
      </div>
    </div>
    <button class="btn btn-secondary btn-sm" onclick="copyParagraph({{ loop.index }})">Copy Goal {{ loop.index }}</button>
  </div>
{% endfor %}
<a href="{{ url_for('routes.quarterly_report') }}" class="btn btn-outline-primary mt-3">Generate Another Report</a>

<script>
  function copyParagraph(index) {
    var text = document.getElementById("reportContainer" + index).innerText;
    navigator.clipboard.writeText(text).then(function() {
      alert("Goal " + index + " copied to clipboard!");
    }, function(err) {
      alert("Failed to copy: " + err);
    });
  }
</script>
{% endblock %}



quarterly_report
<!-- Quarterly progress report form for selecting student, entering performance and support levels, and generating report text. -->
{% extends "base.html" %}
{% block title %}Quarterly Progress Report{% endblock %}
{% block content %}
<h2>Quarterly Progress Report</h2>

{% if not selected_student %}
  <!-- Stage 1: Student Selection -->
  <form method="POST">
    <input type="hidden" name="form_stage" value="start">
    <div class="form-group">
      <label for="student_id">Select Student:</label>
      <select name="student_id" id="student_id" class="form-control">
        <option value="">-- Select Student --</option>
        {% for student in students %}
          <option value="{{ student.student_id }}">{{ student.first_name }} {{ student.last_name }}</option>
        {% endfor %}
      </select>
    </div>
    <button type="submit" class="btn btn-primary">Start Progress Report</button>
  </form>
{% else %}
  <!-- Stage 2: Full Progress Report Form -->
  <form method="POST">
    <input type="hidden" name="form_stage" value="generate">
    <input type="hidden" name="student_id" value="{{ selected_student.student_id }}">
    
    <h3>Student: {{ selected_student.first_name }} {{ selected_student.last_name }}</h3>
    <p>Pronouns: {{ selected_student.pronouns }}</p>
    
    <!-- Quarter Selection -->
    <div class="form-group">
      <label for="quarter">Select Quarter:</label>
      <select class="form-control" id="quarter" name="quarter">
        {% for q in quarters %}
        <option value="{{ q }}" {% if (selected_quarter is not defined or selected_quarter == '') and q == 'Q3' or (selected_quarter and selected_quarter == q) %}selected{% endif %}>{{ q }}</option>
        {% endfor %}
      </select>    
    </div>
    
    <!-- Overall Progress -->
    <div class="form-group">
      <label for="overall_progress">Overall Progress:</label>
      <select class="form-control" id="overall_progress" name="overall_progress" onchange="toggleCustomProgress()">
        {% for option in overall_progress_options %}
        <option value="{{ option }}" {% if (selected_overall_progress is not defined or selected_overall_progress == '') and option == 'Steady Progress' or (selected_overall_progress and selected_overall_progress == option) %}selected{% endif %}>{{ option }}</option>
        {% endfor %}
      </select>
      <input type="text" class="form-control mt-2" id="overall_progress_custom" name="overall_progress_custom" placeholder="Enter custom progress" style="display:none;">
    </div>
    
    <!-- Goals and Objectives -->
    {% for goal in selected_student.goals %}
      <div class="card mb-3">
        <div class="card-header">
          {{ goal.goal_description }}
        </div>
        <div class="card-body">
          {% for obj in goal.objectives %}
            <div class="form-group" id="objective_{{ obj.objective_id }}">
              <label>{{ obj.objective_description }} Performance:</label>
              <div class="performance-notes">
                <input type="number" class="form-control mb-2" name="performance_{{ obj.objective_id }}" placeholder="Enter accuracy percentage (number only)">
                <select class="form-control mb-2" name="support_{{ obj.objective_id }}">
                  <option value="independently">independently</option>
                  <option value="given visual cues">given visual cues</option>
                  <option value="given verbal cues">given verbal cues</option>
                  <option value="given visual and verbal cues">given visual and verbal cues</option>
                  <option value="given visual and verbal cues plus models">given visual and verbal cues plus models</option>
                  <option value="Other">Other</option>
                </select>
              </div>
              <button type="button" class="btn btn-secondary btn-sm" onclick="addPerformanceNote({{ obj.objective_id }})">Add More</button>
            </div>
          {% endfor %}
        </div>
      </div>
    {% endfor %}
    
    <!-- Closing Sentence -->
    <div class="form-group">
      <label for="closing_sentence">Closing Sentence:</label>
      <select class="form-control" id="closing_sentence" name="closing_sentence" onchange="toggleCustomClosing()">
        {% for option in closing_sentence_options %}
          <option value="{{ option }}">{{ option }}</option>
        {% endfor %}
      </select>
      <input type="text" class="form-control mt-2" id="closing_sentence_custom" name="closing_sentence_custom" placeholder="Enter custom closing sentence" style="display:none;">
    </div>
    
    <button type="submit" class="btn btn-primary">Generate Report</button>
  </form>
{% endif %}

<!-- JavaScript functions loaded for all stages -->
<script>
  function toggleCustomProgress() {
    var overallProgress = document.getElementById("overall_progress");
    var customInput = document.getElementById("overall_progress_custom");
    customInput.style.display = overallProgress.value === "Other" ? "block" : "none";
  }
  function toggleCustomClosing() {
    var closingSentence = document.getElementById("closing_sentence");
    var customInput = document.getElementById("closing_sentence_custom");
    customInput.style.display = closingSentence.value === "Other" ? "block" : "none";
  }
  function addPerformanceNote(objectiveId) {
    var container = document.querySelector("#objective_" + objectiveId + " .performance-notes");
    var newInput = document.createElement("input");
    newInput.type = "number";
    newInput.className = "form-control mb-2";
    newInput.name = "performance_" + objectiveId;
    newInput.placeholder = "Enter additional accuracy percentage";
    container.appendChild(newInput);
    
    var newSelect = document.createElement("select");
    newSelect.className = "form-control mb-2";
    newSelect.name = "support_" + objectiveId;
    var options = ["independently", "given visual cues", "given verbal cues", "given visual and verbal cues", "given visual and verbal cues plus models"];
    options.forEach(function(option) {
      var opt = document.createElement("option");
      opt.value = option;
      opt.text = option;
      newSelect.appendChild(opt);
    });
    container.appendChild(newSelect);
  }
</script>
{% endblock %}

reports
{% extends "base.html" %}
{% block content %}
  {% include "_report_buttons.html" %}
{% endblock %}

scheduled_sessions_pending

{% extends "base.html" %}
{% block title %}Pending Sessions{% endblock %}

{% block content %}
  <h2>Sessions Pending Update</h2>
  <table class="table table-bordered">
    <thead>
      <tr>
        <th>Student(s)</th>
        <th>Date</th>
        <th>Time</th>
        <th>Update Status</th>
        <th>View</th>
      </tr>
    </thead>
    <tbody>
      {% for ev in sessions %}
      <tr>
        <td>{{ ev.students|map(attribute='first_name')|join(', ') }}</td>
        <td>{{ ev.start.strftime('%Y-%m-%d') }}</td>
        <td>{{ ev.start.strftime('%H:%M') }} – {{ ev.end.strftime('%H:%M') }}</td>
        <td>
          {% for student in ev.students %}
            {% set recs = ev.student_statuses 
                 | selectattr('student_id','equalto',student.student_id)
                 | list %}
            {% set rec = recs[0] if recs else None %}
            <form method="POST"
                  action="{{ url_for('routes.update_event_student_status',
                                      event_id=ev.id,
                                      student_id=student.student_id) }}"
                  class="form-inline mb-2">
              <label class="mr-2">
                {{ student.first_name }} {{ student.last_name }}:
              </label>
              <select name="status"
                      class="form-control form-control-sm"
                      onchange="this.form.submit()">
                {% for option in ['Scheduled','Completed','Makeup Needed','Excused Absence'] %}
                <option value="{{ option }}"
                        {% if rec and rec.status==option %}selected{% endif %}>
                  {{ option }}
                </option>
                {% endfor %}
              </select>
            </form>
          {% endfor %}
        </td>
        <td>
          <a
            href="{{ url_for('routes.calendar', filter_date=ev.start.strftime('%Y-%m-%d')) }}"
            class="btn btn-primary btn-sm"
          >View in Calendar</a>
        </td>
      </tr>
      {% endfor %}
    </tbody>
  </table>
{% endblock %}

sessions
{% extends "base.html" %}
{% block title %}Sessions{% endblock %}

{% block content %}
  <h2>Sessions</h2>

  <!-- Filter by date -->
  <form method="GET" action="{{ url_for('routes.sessions') }}">
    <div class="input-group mb-3" style="max-width: 250px;">
      <input
        type="date"
        id="filter_date"
        name="filter_date"
        class="form-control"
        value="{{ filter_date or '' }}"
      >
      <div class="input-group-append">
        <button type="button" class="btn btn-secondary" onclick="setToday('filter_date')">
          Today
        </button>
      </div>
    </div>
    <button type="submit" class="btn btn-secondary">Filter</button>
    <a href="{{ url_for('routes.sessions') }}" class="btn btn-light">Clear</a>
  </form>

  <!-- Launch calendar to add a new session/event -->
  <button
    class="btn btn-success mb-3"
    onclick="calendar.today(); $('#eventModal').modal('show');"
  >Add New Session</button>

  <table class="table table-bordered">
    <thead>
      <tr>
        <th>Student(s)</th>
        <th>Date</th>
        <th>Time</th>
        <th>Status</th>
        <th>Plan Notes</th>
        <th>Objectives</th>
        <th>Actions</th>
      </tr>
    </thead>
    <tbody>
      {% for ev in sessions %}
      <tr>
        <!-- STUDENT(S) COLUMN -->
        <td>{{ ev.students|map(attribute='first_name')|join(', ') }}</td>

        <!-- DATE/TIME -->
        <td>{{ ev.start.strftime('%Y-%m-%d') }}</td>
        <td>{{ ev.start.strftime('%H:%M') }} – {{ ev.end.strftime('%H:%M') }}</td>

        <!-- STATUS (per student, paired correctly) -->
        <td>
          <ul class="mb-0 pl-3">
            {% for student in ev.students %}
              {# find the matching status record #}
              {% set matches = ev.student_statuses 
                   | selectattr('student_id','equalto',student.student_id)
                   | list %}
              {% set rec = matches[0] if matches else None %}
              <li>
                <form method="POST"
                      action="{{ url_for('routes.update_event_student_status',
                                          event_id=ev.id,
                                          student_id=student.student_id) }}"
                      class="form-inline">
                  <label class="mr-2">
                    {{ student.first_name }} {{ student.last_name }}:
                  </label>
                  <select name="status"
                          class="form-control form-control-sm"
                          onchange="this.form.submit()">
                    {% for option in ['Scheduled','Completed','Makeup Needed','Excused Absence'] %}
                    <option value="{{ option }}"
                            {% if rec and rec.status==option %}selected{% endif %}>
                      {{ option }}
                    </option>
                    {% endfor %}
                  </select>
                </form>
              </li>
            {% endfor %}
          </ul>
        </td>

        <!-- PLAN NOTES -->
        <td>{{ ev.plan_notes or 'N/A' }}</td>

        <!-- OBJECTIVES (per student, matched same way) -->
        <td>
          {% for student in ev.students %}
            {% set goals = student.goals | selectattr('active') | list %}
            {% set objs = [] %}
            {% for g in goals %}
              {% for o in g.objectives if o.active %}
                {% set _ = objs.append(o.objective_description ~ (o.with_accuracy and ' ('~o.with_accuracy~')' or '')) %}
              {% endfor %}
            {% endfor %}
            <div class="mb-2">
              <strong>{{ student.first_name }} {{ student.last_name }}</strong><br>
              {% if objs %}
              <ul class="mb-0 pl-3">
                {% for desc in objs %}
                <li>{{ desc }}</li>
                {% endfor %}
              </ul>
              {% else %}
              <em>No objectives</em>
              {% endif %}
            </div>
          {% endfor %}
        </td>

        <!-- ARCHIVE + DELETE -->
        <td>
          <!-- ARCHIVE (unchanged) -->
          <form method="POST"
            action="{{ url_for('routes.archive_session', session_id=ev.id) }}"
            style="display:inline-block;"
            onsubmit="return confirmArchive();">
            {# tell the route “where to go next” – request.url already has ?filter_date=… #}
            <input type="hidden" name="next" value="{{ request.url }}">
            <button class="btn btn-secondary btn-sm">Archive</button>
          </form>
          
          <!-- DELETE (now also carries `next`) -->
          <form method="POST"
            action="{{ url_for('routes.delete_event', event_id=ev.id) }}"
            style="display:inline-block;"
            onsubmit="return confirmDelete();">
            <input type="hidden" name="next" value="{{ request.url }}">
            <button class="btn btn-danger btn-sm">Delete</button>
          </form>
        </td>
      </tr>
      {% endfor %}
    </tbody>
  </table>
{% endblock %}

soap_note_result
<!-- Displays the generated SOAP note with copyable sections for S, O, A, and P. -->
{% extends "base.html" %}
{% block content %}
<h2>Generated SOAP Note</h2>

<!-- S Section -->
<h4>S:</h4>
<p id="s_note">{{ s_note }}</p>
<button id="copy_s" onclick="copyToClipboard('s_note', 'copy_s')" class="btn btn-sm btn-outline-primary">Copy S</button>

<!-- O Section -->
<h4>O:</h4>
<p id="o_note">{{ o_note }}</p>
<button id="copy_o" onclick="copyToClipboard('o_note', 'copy_o')" class="btn btn-sm btn-outline-primary">Copy O</button>

<!-- A Section -->
<h4>A:</h4>
<p id="a_note">{{ a_note }}</p>
<button id="copy_a" onclick="copyToClipboard('a_note', 'copy_a')" class="btn btn-sm btn-outline-primary">Copy A</button>

<!-- P Section -->
<h4>P:</h4>
<p id="p_note">{{ p_note }}</p>
<button id="copy_p" onclick="copyToClipboard('p_note', 'copy_p')" class="btn btn-sm btn-outline-primary">Copy P</button>

<!-- Back Button -->
<a href="{{ url_for('routes.soap_note') }}" class="btn btn-secondary mt-4">Generate Another Note</a>

<script>
    function copyToClipboard(elementId, buttonId) {
        const text = document.getElementById(elementId).innerText;
        navigator.clipboard.writeText(text).then(function() {
            // Show "Copied!" message next to button
            const button = document.getElementById(buttonId);
            const msg = document.createElement('span');
            msg.innerText = ' Copied!';
            msg.style.color = 'green';
            msg.style.marginLeft = '10px';
            button.parentNode.appendChild(msg);
            
            // Remove message after 2 seconds
            setTimeout(() => msg.remove(), 2000);
        }, function(err) {
            console.error('Failed to copy: ', err);
        });
    }
</script>
{% endblock %}

soap_note
<!-- SOAP Note input form for recording session performance, objectives, and support strategies. -->
{% extends "base.html" %}
{% block content %}
<h2>SOAP Note Generator</h2>

<!-- Student Selector -->
<form method="GET" action="{{ url_for('routes.soap_note') }}">
  <div class="form-group">
    <label for="student_id">Student:</label>
    <select name="student_id" id="student_id" class="form-control" onchange="this.form.submit()">
      <option value="">Select Student</option>
      {% for student in students %}
        <option value="{{ student.student_id }}" {% if selected_student and selected_student.student_id == student.student_id %}selected{% endif %}>
          {{ student.first_name }} {{ student.last_name }}
        </option>
      {% endfor %}
    </select>
  </div>
</form>

<!-- Display Monthly Services & Sessions Count -->
{% if selected_student %}
  <p><strong>Monthly Sessions Expected:</strong> {{ monthly_services or 'N/A' }}</p>
  <p><strong>Sessions Logged This Month:</strong> {{ session_count }}</p>
{% endif %}

<!-- Main SOAP Note Form -->
<form method="POST">
  <input type="hidden" name="student_id" value="{{ selected_student.student_id }}">
  
  <!-- Month Dropdown -->
  <div class="form-group">
    <label for="month">Month:</label>
    <select name="month" id="month" class="form-control">
      {% for month in months %}
        <option value="{{ month }}" {% if month == current_month %}selected{% endif %}>{{ month }}</option>
      {% endfor %}
    </select>
  </div>

  <!-- Session Number -->
  <div class="form-group">
    <label>Session Number:</label>
    <input type="number" name="session_number" class="form-control" placeholder="e.g., 1" required>
  </div>

  <!-- Total Sessions -->
  <div class="form-group">
    <label>Total Sessions for Month:</label>
    <input type="number" name="total_sessions" class="form-control" placeholder="e.g., 4" required>
  </div>
  
  <!-- Session Type -->
  <div class="form-group">
    <label for="session_type">Session Type:</label>
    <select name="session_type" id="session_type" class="form-control">
      <option value="Individual" selected>Individual</option>
      <option value="Group">Group</option>
    </select>
  </div>

  <!-- Performance -->
  <div class="form-group">
    <label>Performance:</label>
    <select name="performance" class="form-control">
      <option value="engaged and focused on all tasks with minimal redirection needed">Attentive</option>
      <option value="somewhat distracted during the session but was able to be redirected back to the task">Slightly Distracted</option>
      <option value="easily distracted and required frequent redirection to stay on task">Distracted</option>
      <option value="highly motivated and enthusiastic, showing strong interest in tasks">Motivated</option>
      <option value="visibly tired, showing reduced enthusiasm for tasks and needing support to stay focused">Tired</option>
      <option value="not consistently engaged and needed multiple prompts to participate in tasks">Minimal Participation</option>
    </select>
  </div>

  <!-- Additional S Notes -->
  <div class="form-group">
    <label>Additional Notes (S):</label>
    <textarea name="additional_S" class="form-control" placeholder="Any extra details for S section..."></textarea>
  </div>

  <!-- Activity Dropdown -->
  <div class="form-group">
    <label>Activity:</label>
    <select name="activity" class="form-control">
      <option value="">Select Activity</option>
      <option value="Short Story">Short Story</option>
      <option value="Pictures">Pictures</option>
      <option value="Other">Other (describe below)</option>
    </select>
    <input type="text" name="activity_other" class="form-control mt-2" placeholder="If other, describe here (e.g., a set of pictures)">
  </div>

  <!-- Objective -->
  <div class="form-group">
    <label>Objective:</label>
    <select name="objective" class="form-control">
      {% if objectives %}
        {% for obj in objectives %}
          <option value="{{ obj.objective_description }}">{{ obj.objective_description }}</option>
        {% endfor %}
      {% else %}
        <option value="">No active objectives for this student</option>
      {% endif %}
      <option value="Other">Other (write below)</option>
    </select>
    <input type="text" name="objective_other" class="form-control mt-2" placeholder="If other, write here (e.g., label pictures)">
  </div>

  <!-- Accuracy -->
  <div class="form-group">
    <label>Accuracy (without % sign):</label>
    <input type="number" name="accuracy" class="form-control" placeholder="e.g., 80" required>
  </div>

  <!-- Support Level -->
  <div class="form-group">
    <label>Support Level:</label>
    <select name="support_level" class="form-control">
      <option value="independently">Independently</option>
      <option value="given visual cues">Given visual cues</option>
      <option value="given verbal cues">Given verbal cues</option>
      <option value="given visual and verbal cues">Given visual and verbal cues</option>
      <option value="given visual and verbal cues plus models">Given visual and verbal cues plus models</option>
      <option value="Other">Other (write below)</option>
    </select>
    <input type="text" name="support_level_other" class="form-control mt-2" placeholder="If other, write here">
  </div>

  <!-- Additional O Notes -->
  <div class="form-group">
    <label>Additional Notes (O):</label>
    <textarea name="additional_O" class="form-control" placeholder="Any extra details for O section..."></textarea>
  </div>

  <!-- Visual Cues -->
  <div class="form-group">
    <label>Visual Cues (Select all that apply):</label><br>
    {% for cue in ['graphic organizer', 'written answer choices', 'written clues', 'picture choices', 'sentence starters', 'sentence starters with pictures', 'pictures for each word in sentence', 'written instructions', 'visual to support instructions', 'word bank', 'highlighted text excerpts'] %}
      <input type="checkbox" name="visual_cues" value="{{ cue }}"> {{ cue }}<br>
    {% endfor %}
    <input type="text" name="visual_cues_other" class="form-control mt-2" placeholder="Other (if applicable)">
  </div>
  
  <!-- Verbal Cues -->
  <div class="form-group">
    <label>Verbal Cues (Select all that apply):</label><br>
    {% for cue in ['leading questions', 'verbal hints', 'verbally presented choices', 'verbally presented instructions', 'verbal reminders', 'repetition of text/excerpt from text'] %}
      <input type="checkbox" name="verbal_cues" value="{{ cue }}"> {{ cue }}<br>
    {% endfor %}
    <input type="text" name="verbal_cues_other" class="form-control mt-2" placeholder="Other (if applicable)">
  </div>
  
  <button type="submit" class="btn btn-success">Generate SOAP Note</button>
</form>
{% endblock %}


student_info
{% extends "base.html" %}

{% block content %}
  <h2>Student Info: {{ student.first_name }} {{ student.last_name }}</h2>
  <p><strong>Grade:</strong> {{ student.grade }}</p>

  <h3>Goals & Objectives</h3>
  {% if student.goals %}
    <ul>
      {% for goal in student.goals if goal.active %}
        <li>
          <strong>Goal:</strong> {{ goal.goal_description }}
          {% if goal.objectives %}
            <ul>
              {% for objective in goal.objectives if objective.active %}
                <li>{{ objective.objective_description }} (Accuracy: {{ objective.with_accuracy }})</li>
              {% endfor %}
            </ul>
          {% else %}
            <p>No objectives.</p>
          {% endif %}
        </li>
      {% endfor %}
    </ul>
  {% else %}
    <p>No goals found.</p>
  {% endif %}

  <h3>Recent Events</h3>
  {% if recent_events %}
    <table class="table table-bordered">
      <thead>
        <tr>
          <th>Date</th>
          <th>Time</th>
          <th>Status</th>
          <th>Plan Notes</th>
          <th>View</th>
        </tr>
      </thead>
      <tbody>
        {% for event in recent_events %}
          <tr>
            <td>{{ event.start.strftime('%Y-%m-%d') }}</td>
            <td>{{ event.start.strftime('%H:%M') }} – {{ event.end.strftime('%H:%M') }}</td>
            <td>{{ event.status }}</td>
            <td>{{ event.plan_notes or 'N/A' }}</td>
            <td>
              <a href="{{ url_for('routes.calendar') }}?filter_date={{ event.start.strftime('%Y-%m-%d') }}" class="btn btn-primary btn-sm">
                View on Calendar
              </a>
            </td>
          </tr>
        {% endfor %}
      </tbody>
    </table>
  {% else %}
    <p>No sessions found.</p>
  {% endif %}

  <!-- Links to edit student or view their trial logs -->
  <p>
    <a href="{{ url_for('routes.edit_student', student_id=student.student_id) }}"
       class="btn btn-secondary">
      Edit Student Info
    </a>
    <a href="{{ url_for('routes.student_trial_logs', student_id=student.student_id) }}"
       class="btn btn-primary">
      View Trial Logs
    </a>
  </p>
{% endblock %}

student_search
<!-- Student search page allowing users to search for students by name and view details. -->
{% extends "base.html" %}

{% block content %}
<h2>Student Search</h2>
<form method="GET" action="{{ url_for('routes.student_search') }}">
    <div class="mb-3">
        <label for="q" class="form-label">Search for a student:</label>
        <input type="text" id="q" name="q" class="form-control" placeholder="Enter student name..." value="{{ query or '' }}">
    </div>
    <button type="submit" class="btn btn-primary">Search</button>
</form>

{% if query %}
    <h3>Results for "{{ query }}":</h3>
    {% if students %}
        <ul>
        {% for student in students %}
            <li>
                <a href="{{ url_for('routes.student_info', student_id=student.student_id) }}">
                    {{ student.first_name }} {{ student.last_name }} - Grade: {{ student.grade }}
                </a>
            </li>
        {% endfor %}
        </ul>
    {% else %}
        <p>No students found matching "{{ query }}".</p>
    {% endif %}
{% endif %}
{% endblock %}


student_trial_logs
<!-- Table page showing all session trial logs for a student, with trial counts and cue percentages. -->
{% extends "base.html" %}

{% block content %}
<h2>Trial Logs for {{ student.first_name }} {{ student.last_name }}</h2>

<table class="table table-bordered">
    <thead>
        <tr>
            <th>Date</th>
            <th>Objective</th>
            <th>Total Trials</th>
            <th>% No Support</th>
            <th>% With 1 Cue</th>
            <th>% Visual + Verbal Cues</th>
            <th>% With Modeling</th>
            <th>Notes</th>
        </tr>
    </thead>
    <tbody>
        {% for log in trial_logs %}
        <tr>
            <td>{{ log.date_of_session.strftime('%Y-%m-%d') }}</td>
            <td>{{ log.objective.objective_description if log.objective else 'N/A' }}</td>
            <td>{{ log.total_trials() }}</td>
            <td>{{ log.percent_no_support() }}%</td>
            <td>{{ log.percent_with_1_cue() }}%</td>
            <td>{{ log.percent_visual_verbal_cues() }}%</td>
            <td>{{ log.percent_with_modeling() }}%</td>
            <td>{{ log.notes or '' }}</td>
        </tr>
        {% endfor %}
    </tbody>
</table>

<a href="{{ url_for('routes.student_info', student_id=student.student_id) }}" class="btn btn-secondary">Back to Profile</a>
{% endblock %}


trial_log
{% extends "base.html" %}
<!-- Trial log page for recording and submitting session trial data for selected objectives. -->
{% block content %}
<h2>Trial Log</h2>

<!-- Student Selection Form (GET) -->
<form method="GET">
  <div class="form-group">
    <label for="student_id">Select Student:</label>
    <select class="form-control" name="student_id" id="student_id" onchange="this.form.submit()" required>
      <option value="">-- Select a Student --</option>
      {% for student in students %}
        <option value="{{ student.student_id }}" {% if student.student_id|string == selected_student_id %}selected{% endif %}>
          {{ student.first_name }} {{ student.last_name }}
        </option>
      {% endfor %}
    </select>
  </div>
</form>

<!-- Trial Logging Form (POST) -->
{% if selected_student_id %}
  {% if objectives %}
    <form method="POST">
      <!-- Hidden input to keep student_id when submitting trial log -->
      <input type="hidden" name="student_id" value="{{ selected_student_id }}">
      
      <!-- Date of Session -->
      <div class="form-group">
        <label for="date_of_session">Date of Session:</label>
        <input type="date" class="form-control" name="date_of_session" value="{{ today }}" required>
      </div>

      <!-- Objective Selection -->
      <div class="form-group">
        <label for="objective_ids">Select Objective(s):</label>
        {% for obj in objectives %}
          <div class="form-check">
            <input class="form-check-input" type="checkbox" name="objective_ids" value="{{ obj.objective_id }}" id="objective{{ obj.objective_id }}">
            <label class="form-check-label" for="objective{{ obj.objective_id }}">
              {{ obj.objective_description }}
            </label>
          </div>
        {% endfor %}
      </div>

      <!-- Trial Counts -->
      <h4>Trial Counts</h4>
      <div class="form-group">
        <label>Correct - No Support:</label>
        <input type="number" name="correct_no_support" class="form-control" min="0" value="0">
      </div>
      <div class="form-group">
        <label>Correct - Visual Cue:</label>
        <input type="number" name="correct_visual_cue" class="form-control" min="0" value="0">
      </div>
      <div class="form-group">
        <label>Correct - Verbal Cue:</label>
        <input type="number" name="correct_verbal_cue" class="form-control" min="0" value="0">
      </div>
      <div class="form-group">
        <label>Correct - Visual + Verbal Cue:</label>
        <input type="number" name="correct_visual_verbal_cue" class="form-control" min="0" value="0">
      </div>
      <div class="form-group">
        <label>Correct - Modeling:</label>
        <input type="number" name="correct_modeling" class="form-control" min="0" value="0">
      </div>
      <div class="form-group">
        <label>Incorrect:</label>
        <input type="number" name="incorrect" class="form-control" min="0" value="0">
      </div>

      <!-- Notes -->
      <div class="form-group">
        <label>Session Notes (optional):</label>
        <textarea name="notes" class="form-control" rows="3"></textarea>
      </div>

      <!-- Submit -->
      <button type="submit" class="btn btn-primary">Submit Trial Log</button>
    </form>
  {% else %}
    <p>No active objectives found for this student. You may need to add some first.</p>
  {% endif %}
{% else %}
  <p>Please select a student to view and log objectives.</p>
{% endif %}

{% endblock %}


trial_logs_by_date
<!-- Table page listing all session trial logs by selected date, with summary percentages and notes. -->
{% extends "base.html" %}
{% block content %}
<h2>Trial Logs for {{ selected_date }}</h2>

<form method="GET" action="{{ url_for('routes.trial_logs_by_date') }}">
  <div class="input-group mb-3" style="max-width: 250px;">
    <input type="date" id="date" name="date" class="form-control small-input" value="{{ selected_date }}">
    <div class="input-group-append">
      <button type="button" class="btn btn-outline-secondary" onclick="setToday('date')">Today</button>
    </div>
  </div>
  <button type="submit" class="btn btn-primary">View Trial Logs</button>
</form>

<table class="table table-striped mt-4">
  <thead>
    <tr>
      <th>Student</th>
      <th>Date</th>
      <th>Objective</th>
      <th>Total Trials</th>
      <th>% No Support</th>
      <th>% With 1 Cue</th>
      <th>% Visual + Verbal Cues</th>
      <th>% With Modeling</th>
      <th>Notes</th>
    </tr>
  </thead>
  <tbody>
    {% for log in trial_logs %}
    <tr>
      <td>{{ log.student.first_name }} {{ log.student.last_name }}</td>
      <td>{{ log.date_of_session.strftime('%Y-%m-%d') }}</td>
      <td>{{ log.objective.objective_description if log.objective else 'N/A' }}</td>
      <td>{{ log.total_trials() }}</td>
      <td>{{ log.percent_no_support() }}%</td>
      <td>{{ log.percent_with_1_cue() }}%</td>
      <td>{{ log.percent_visual_verbal_cues() }}%</td>
      <td>{{ log.percent_with_modeling() }}%</td>
      <td>{{ log.notes or '' }}</td>
    </tr>
    {% else %}
    <tr>
      <td colspan="9">No trial logs found for this date.</td>
    </tr>
    {% endfor %}
  </tbody>
</table>

<script>
function setToday(fieldId) {
  var today = new Date().toISOString().split('T')[0];
  document.getElementById(fieldId).value = today;
}
</script>

{% endblock %}
